# Feature engineering#
######################

#extracting the first digit in the pincode
data_comb$Office_PIN_code <- as.factor(substr(data_comb$Office_PIN,0,1))
data_comb$applicant_PIN_code <- as.factor(substr(data_comb$Applicant_City_PIN,0,1))
data_comb[data_comb$applicant_PIN_code == '9','applicant_PIN_code']<-'8'
data_comb$applicant_PIN_code <- factor(data_comb$applicant_PIN_code) 
#extracting month and year of the application date
data_comb$application_receipt_month <- as.factor(format(data_comb$Application_Receipt_Date,'%m'))
data_comb$application_receipt_year <- as.factor(format(data_comb$Application_Receipt_Date,'%Y'))
#calculating the age of the applicant
data_comb$applicant_age <- as.numeric(difftime(data_comb$Application_Receipt_Date, data_comb$Applicant_BirthDate, unit="weeks"))/52.25
#to calculate the distance b/w the office and the applicant
data_comb$distance <- abs(as.numeric(levels(data_comb$Office_PIN))[data_comb$Office_PIN] - as.numeric(levels(data_comb$Applicant_City_PIN))[data_comb$Applicant_City_PIN])
data_comb$dist_bins <- ifelse(data_comb$distance > 50000, 'V_far',
                         ifelse(data_comb$distance > 10000, 'far',
                                ifelse(data_comb$distance > 5000, 'notso_far',
                                       ifelse(data_comb$distance > 1000, 'ok_far',
                                              ifelse(data_comb$distance > 500, 'near',"V_near")))))
data_comb$dist_bins <- as.factor(data_comb$dist_bins)
#calculating the experience of the manager
data_comb$manager_exp <- as.numeric(difftime(data_comb$Application_Receipt_Date, data_comb$Manager_DOJ, unit="weeks"))/52.25
#calculating the age of the manager
data_comb$manager_age <- as.numeric(difftime(data_comb$Application_Receipt_Date, data_comb$Manager_DoB, unit="weeks"))/52.25

dim(data_comb)
#removing the date fields 
data_comb$Applicant_BirthDate <- NULL
data_comb$Manager_DOJ <- NULL
data_comb$Manager_DoB <- NULL
#imputing the missing values with -1
data_comb[is.na(data_comb)] <- -1

#saving the files after pre-processing and not considering variables that are used to create new ones
write.csv(data_comb,'/home/apadala/Documents/AV_competition/data_comb.csv')
data_comb_prep <- data_comb[,-c(1,3,23,24,26)]
write.csv(data_comb_prep,'/home/apadala/Documents/AV_competition/data_comb_prep.csv')
str(data_comb_prep)
summary(data_comb_prep)
dim(data_comb_prep)

#spliting the complete data into intial train and test data
data_train <- data_comb_prep[data_comb_prep$flag == T,]
data_train$flag <- NULL
dim(data_train)
data_test <- data_comb_prep[data_comb_prep$flag == F,]
data_test$flag <- NULL
data_test$Business_Sourced <- NULL
dim(data_test)


###################################################
#creating the order of applicants - most important#
###################################################
data_train$Application_Receipt_Days = as.numeric(as.Date("2016-01-01") - as.Date(data_train$Application_Receipt_Date, "%m/%d/%Y"))
data_test$Application_Receipt_Days = as.numeric(as.Date("2016-01-01") - as.Date(data_test$Application_Receipt_Date, "%m/%d/%Y"))

data_train$Order <- seq(0, nrow(data_train)-1)
data_test$Order <- seq(0, nrow(data_test)-1)

data_train_order <- 
  data_train %>%
    group_by(Application_Receipt_Days) %>%
    summarise(min_order = max(Order),
              max_order = min(Order))
  
data_test_order <- 
  data_test %>%
  group_by(Application_Receipt_Days) %>%
  summarise(min_order = max(Order),
            max_order = min(Order))

data_train <- merge(data_train, data_train_order, by.x = "Application_Receipt_Days", by.y = "Application_Receipt_Days")
data_test <- merge(data_test, data_test_order, by.x = "Application_Receipt_Days", by.y = "Application_Receipt_Days")

# normalizing order to [0,1]
data_train$Order_Percentile <- (data_train$Order - data_train$min_order)/(data_train$max_order - data_train$min_order)
data_test$Order_Percentile <- (data_test$Order - data_test$min_order)/(data_test$max_order - data_test$min_order)
data_train <- select(data_train, -c(Order, min_order, max_order, Application_Receipt_Days,Application_Receipt_Date))
data_test <- select(data_test, -c(Order, min_order, max_order, Application_Receipt_Days,Application_Receipt_Date))
